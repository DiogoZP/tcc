generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
} 

model Setor {
  id        Int      @id @default(autoincrement())
  nome      String
  veiculos  Veiculo[]
  motoristas Motorista[]
  usuarios  Usuario[]
  deleted Boolean @default(false)
}

model Usuario {
  id              Int     @id @default(autoincrement())
  nome            String
  email           String  @unique
  senha           String
  setor           Setor    @relation(fields: [setorId], references: [id])
  setorId         Int
  deleted Boolean @default(false)
}

model Veiculo {
  id              Int      @id @default(autoincrement())
  placa           String   
  marca           String
  modelo          String
  tipo            String
  ano             Int
  cor             String
  renavam         String   
  chassi          String   
  km              Int
  combustivel     String
  categoriaCNH    String
  status          String
  setor           Setor    @relation(fields: [setorId], references: [id])
  setorId         Int
  movimentos      Movimento[]
  uploads         Upload[]
  solicitacoes    Solicitacao[]
  infracoes       Infracao[]
  deleted Boolean @default(false)
}

model Motorista {
  id                  Int      @id @default(autoincrement())
  nome                String
  cpf                 String   
  rg                  String   
  categoriaCNH        String
  numeroCNH           String   
  validadeCNH         DateTime
  telefone            String
  endereco            String
  setor               Setor    @relation(fields: [setorId], references: [id])
  setorId             Int
  movimentos          Movimento[]
  uploads             Upload[]
  infracoes           Infracao[]
  deleted Boolean @default(false)
}

model Movimento {
  id                  Int      @id @default(autoincrement())
  dataSaida           String
  dataRetorno         String
  kmSaida             Int
  kmRetorno           Int
  itinerario          String
  motorista           Motorista @relation(fields: [motoristaId], references: [id])
  motoristaId         Int
  veiculo             Veiculo   @relation(fields: [veiculoId], references: [id])
  veiculoId           Int
  deleted Boolean @default(false)
}

model Infracao {
  id                  Int      @id @default(autoincrement())
  data                String
  descricao           String
  valor               Float
  motorista           Motorista @relation(fields: [motoristaId], references: [id])
  motoristaId         Int
  veiculo             Veiculo   @relation(fields: [veiculoId], references: [id])
  veiculoId           Int
  deleted Boolean @default(false)
}

model Item {
  id                  Int      @id @default(autoincrement())
  codigo              String
  nome                String
  descricao           String
  uploads             Upload[]
  itemSolicitacao     ItemSolicitacao[]
  itemEstoque         ItemEstoque[]
  deleted Boolean @default(false)
}

model ItemSolicitacao {
  id                  Int      @id @default(autoincrement())
  quantidade          Int
  item                Item     @relation(fields: [itemId], references: [id])
  itemId              Int
  solicitacao         Solicitacao @relation(fields: [solicitacaoId], references: [id])
  solicitacaoId       Int
  deleted Boolean @default(false)
}

model ItemEstoque {
  id                  Int      @id @default(autoincrement())
  quantidade          Int
  item                Item     @relation(fields: [itemId], references: [id])
  itemId              Int
  deleted Boolean @default(false)
}

model Solicitacao {
  id                  Int      @id @default(autoincrement())
  data                String
  veiculo             Veiculo   @relation(fields: [veiculoId], references: [id])
  veiculoId           Int
  itens               ItemSolicitacao[]
  deleted Boolean @default(false)
}

model Upload {
  id                Int      @id @default(autoincrement())
  filename          String
  mimetype          String
  motorista         Motorista? @relation(fields: [motoristaId], references: [id])
  motoristaId       Int?
  veiculo           Veiculo? @relation(fields: [veiculoId], references: [id])
  veiculoId         Int?
  item              Item? @relation(fields: [itemId], references: [id])
  itemId            Int?
  deleted Boolean @default(false)
}